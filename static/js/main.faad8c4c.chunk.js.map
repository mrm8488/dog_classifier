{"version":3,"sources":["dogs-resnet18.onnx","data/classes.js","components/Scorecard.js","components/Predictions.js","components/Snackbars.js","components/DropzoneIcon.js","components/DropImageCard.js","components/Classifier.js","data/credits.js","components/App.js","serviceWorker.js","index.js","components/util.js"],"names":["module","exports","useStyles","makeStyles","card","width","height","item","paddingTop","Scorecard","items","classes","Card","className","List","dense","map","avatar","name","percentage","id","ListItem","key","ListItemAvatar","Avatar","alt","src","ListItemText","primary","ListItemSecondaryAction","Typography","getTopK","acts","k","topK","Array","from","act","i","sort","a","b","reverse","slice","denominator","y","Math","exp","reduce","_","breed","prob","Predictions","output","getBreed","toFixed","getBreedImg","theme","box","padding","margin","content","boxSizing","info","backgroundColor","palette","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","InfoSnackbar","Box","SnackbarContent","clsx","LoadingSnackbar","CircularProgress","size","color","fileLoaded","isDragActive","position","justifyContent","marginBottom","canvas","zIndex","input","DropImageCard","setFile","canvasRef","onDrop","useCallback","acceptedFiles","length","console","log","file","type","startsWith","useDropzone","getRootProps","getInputProps","ref","DropzoneIcon","session","makeSession","root","flexGrow","Classifier","useState","loaded","setLoaded","isLoading","setIsLoading","startLoadModel","loadModel","useRef","data","setData","useEffect","fetchImage","outputMap","setOutputMap","runModel","outputData","values","next","value","Grid","container","Button","variant","onClick","csv","split","line","source","author","license","img","marginTop","menuButton","title","heading","typography","pxToRem","fontWeight","fontWeightRegular","table","footer","button","App","AppBar","Toolbar","Container","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","breeds","Link","to","join","Table","TableHead","TableRow","TableCell","TableBody","credits","row","component","scope","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","p","charAt","toUpperCase","toLowerCase","InferenceSession","backendHint","warmupModel","dims","warmupTensor","Tensor","Float32Array","random","run","resnet","preprocess","inputTensor","setTimeout","_runModel","dataTensor","ndarray","dataProcessedTensor","ops","assign","pick","divseq","subseq","wait","ms","Promise","res","rej","global","imgConfig","maxWidth","maxHeight","cover","crop","crossOrigin","orientation","getImage","url","loadImage","current","Error","ctx","getContext","drawImage","getImageData"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,4C,iJCA5B,GACb,eACA,sBACA,WACA,iCACA,cACA,qBACA,qBACA,uBACA,mBACA,gBACA,iBACA,cACA,uBACA,oBACA,mBACA,WACA,2BACA,YACA,iBACA,WACA,mBACA,iBACA,mBACA,cACA,aACA,iBACA,kBACA,8BACA,gBACA,aACA,iBACA,6BACA,eACA,eACA,gBACA,sBACA,kBACA,oBACA,mBACA,qBACA,qBACA,mBACA,WACA,QACA,cACA,mBACA,eACA,kBACA,qBACA,kBACA,uBACA,WACA,WACA,aACA,sBACA,aACA,gBACA,SACA,UACA,iBACA,qBACA,mBACA,oBACA,WACA,iBACA,4BACA,iBACA,kBACA,kBACA,eACA,aACA,yBACA,8BACA,oBACA,gBACA,UACA,SACA,SACA,0BACA,aACA,WACA,SACA,QACA,SACA,eACA,QACA,OACA,UACA,iBACA,SACA,yBACA,QACA,QACA,wBACA,kBACA,mBACA,cACA,WACA,SACA,WACA,SACA,WACA,WACA,qBACA,mBACA,sBACA,aACA,WACA,MACA,UACA,aACA,gBACA,8BACA,kBACA,qBACA,aACA,cACA,SACA,UACA,2B,gFC7GIC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,IACPC,OAAQ,KAEVC,KAAM,CACJC,WAAY,MAID,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,EAAUT,IAChB,OACE,kBAACU,EAAA,EAAD,CAAMC,UAAWF,EAAQP,MACvB,kBAACU,EAAA,EAAD,CAAMC,OAAK,GACRL,EAAMM,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpBC,EAAE,UAAMF,EAAN,YAAcC,GACtB,OACE,kBAACE,EAAA,EAAD,CAAUC,IAAKF,EAAIP,UAAWF,EAAQJ,MACpC,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,IAAG,mBAAcP,GAAQQ,IAAKT,KAExC,kBAACU,EAAA,EAAD,CAAcP,GAAIA,EAAIQ,QAASV,IA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","file":"static/js/main.faad8c4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dogs-resnet18.e15a2861.onnx\";","export default [\n  \"Afghan_hound\",\n  \"African_hunting_dog\",\n  \"Airedale\",\n  \"American_Staffordshire_terrier\",\n  \"Appenzeller\",\n  \"Australian_terrier\",\n  \"Bedlington_terrier\",\n  \"Bernese_mountain_dog\",\n  \"Blenheim_spaniel\",\n  \"Border_collie\",\n  \"Border_terrier\",\n  \"Boston_bull\",\n  \"Bouvier_des_Flandres\",\n  \"Brabancon_griffon\",\n  \"Brittany_spaniel\",\n  \"Cardigan\",\n  \"Chesapeake_Bay_retriever\",\n  \"Chihuahua\",\n  \"Dandie_Dinmont\",\n  \"Doberman\",\n  \"English_foxhound\",\n  \"English_setter\",\n  \"English_springer\",\n  \"EntleBucher\",\n  \"Eskimo_dog\",\n  \"French_bulldog\",\n  \"German_shepherd\",\n  \"German_short-haired_pointer\",\n  \"Gordon_setter\",\n  \"Great_Dane\",\n  \"Great_Pyrenees\",\n  \"Greater_Swiss_Mountain_dog\",\n  \"Ibizan_hound\",\n  \"Irish_setter\",\n  \"Irish_terrier\",\n  \"Irish_water_spaniel\",\n  \"Irish_wolfhound\",\n  \"Italian_greyhound\",\n  \"Japanese_spaniel\",\n  \"Kerry_blue_terrier\",\n  \"Labrador_retriever\",\n  \"Lakeland_terrier\",\n  \"Leonberg\",\n  \"Lhasa\",\n  \"Maltese_dog\",\n  \"Mexican_hairless\",\n  \"Newfoundland\",\n  \"Norfolk_terrier\",\n  \"Norwegian_elkhound\",\n  \"Norwich_terrier\",\n  \"Old_English_sheepdog\",\n  \"Pekinese\",\n  \"Pembroke\",\n  \"Pomeranian\",\n  \"Rhodesian_ridgeback\",\n  \"Rottweiler\",\n  \"Saint_Bernard\",\n  \"Saluki\",\n  \"Samoyed\",\n  \"Scotch_terrier\",\n  \"Scottish_deerhound\",\n  \"Sealyham_terrier\",\n  \"Shetland_sheepdog\",\n  \"Shih-Tzu\",\n  \"Siberian_husky\",\n  \"Staffordshire_bullterrier\",\n  \"Sussex_spaniel\",\n  \"Tibetan_mastiff\",\n  \"Tibetan_terrier\",\n  \"Walker_hound\",\n  \"Weimaraner\",\n  \"Welsh_springer_spaniel\",\n  \"West_Highland_white_terrier\",\n  \"Yorkshire_terrier\",\n  \"affenpinscher\",\n  \"basenji\",\n  \"basset\",\n  \"beagle\",\n  \"black-and-tan_coonhound\",\n  \"bloodhound\",\n  \"bluetick\",\n  \"borzoi\",\n  \"boxer\",\n  \"briard\",\n  \"bull_mastiff\",\n  \"cairn\",\n  \"chow\",\n  \"clumber\",\n  \"cocker_spaniel\",\n  \"collie\",\n  \"curly-coated_retriever\",\n  \"dhole\",\n  \"dingo\",\n  \"flat-coated_retriever\",\n  \"giant_schnauzer\",\n  \"golden_retriever\",\n  \"groenendael\",\n  \"keeshond\",\n  \"kelpie\",\n  \"komondor\",\n  \"kuvasz\",\n  \"malamute\",\n  \"malinois\",\n  \"miniature_pinscher\",\n  \"miniature_poodle\",\n  \"miniature_schnauzer\",\n  \"otterhound\",\n  \"papillon\",\n  \"pug\",\n  \"redbone\",\n  \"schipperke\",\n  \"silky_terrier\",\n  \"soft-coated_wheaten_terrier\",\n  \"standard_poodle\",\n  \"standard_schnauzer\",\n  \"toy_poodle\",\n  \"toy_terrier\",\n  \"vizsla\",\n  \"whippet\",\n  \"wire-haired_fox_terrier\"\n];\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 299,\n    height: 299\n  },\n  item: {\n    paddingTop: 10\n  }\n});\n\nexport default function Scorecard({ items }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <List dense>\n        {items.map(({ avatar, name, percentage }) => {\n          const id = `${name}-${percentage}`;\n          return (\n            <ListItem key={id} className={classes.item}>\n              <ListItemAvatar>\n                <Avatar alt={`image of ${name}`} src={avatar} />\n              </ListItemAvatar>\n              <ListItemText id={id} primary={name} />\n              <ListItemSecondaryAction>\n                <Typography>{percentage}%</Typography>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport classes from \"../data/classes\";\nimport Scorecard from \"./Scorecard\";\nimport { getBreedImg, getBreed } from \"./util\";\n\nconst getTopK = (acts, k) => {\n  const topK = Array.from(acts)\n    .map((act, i) => [act, i])\n    .sort((a, b) => {\n      if (a[0] < b[0]) return -1;\n      if (a[0] > b[0]) return 1;\n      return 0;\n    })\n    .reverse()\n    .slice(0, k);\n\n  // denominator of softmax function\n  const denominator = acts.map(y => Math.exp(y)).reduce((a, b) => a + b);\n  return topK.map(([act, i], _, acts) => ({\n    breed: classes[i],\n    act,\n    prob: Math.exp(act) / denominator\n  }));\n};\n\nexport default function Predictions({ output }) {\n  if (!output) return null;\n  const items = getTopK(output, 5).map(({ breed, prob }) => ({\n    name: getBreed(breed),\n    percentage: (prob * 100).toFixed(2),\n    avatar: getBreedImg(breed)\n  }));\n  return <Scorecard items={items} />;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n    width: 299,\n    padding: 0,\n    margin: 0\n  },\n  content: {\n    boxSizing: \"border-box\"\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nexport function InfoSnackbar({ message }) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <SnackbarContent\n        className={clsx(classes.info, classes.content)}\n        message={\n          <span className={classes.message}>\n            <InfoIcon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n      />\n    </Box>\n  );\n}\n\nexport function LoadingSnackbar({ message }) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CircularProgress size={20} className={classes.iconVariant} />\n            {message}\n          </span>\n        }\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  icon: {\n    width: \"50%\",\n    height: \"50%\",\n    color: \"grey\"\n  }\n});\n\nexport default ({ fileLoaded, isDragActive }) => {\n  const classes = useStyles();\n  if (fileLoaded) {\n    return null;\n  }\n  if (isDragActive) {\n    return <CheckCircleIcon className={classes.icon} />;\n  }\n  return <InsertPhotoIcon className={classes.icon} />;\n};\n","import React, { useCallback } from \"react\";\nimport DropzoneIcon from \"./DropzoneIcon\";\nimport { useDropzone } from \"react-dropzone\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 299,\n    height: 299,\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  canvas: {\n    width: 299,\n    height: 299,\n    zIndex: 0,\n    position: \"absolute\"\n  },\n  input: {\n    zIndex: 9999,\n    position: \"absolute\"\n  }\n});\n\nexport default function DropImageCard({ setFile, canvasRef, fileLoaded }) {\n  const classes = useStyles();\n  const onDrop = useCallback(\n    acceptedFiles => {\n      if (acceptedFiles.length > 1) {\n        return console.log(\"can only handle one file at a time\");\n      }\n      if (acceptedFiles.length === 0) return;\n      const file = acceptedFiles[0];\n      if (!file.type.startsWith(\"image\")) {\n        return console.log(\"file must be an image\");\n      }\n      setFile(file);\n    },\n    [setFile]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <Card {...getRootProps()} className={classes.card}>\n      <canvas\n        className={classes.canvas}\n        ref={canvasRef}\n        width={299}\n        height={299}\n      />\n      <input\n        alt=\"Image Dropzone\"\n        type=\"image\"\n        className={classes.input}\n        {...getInputProps()}\n      />\n      <DropzoneIcon fileLoaded={fileLoaded} isDragActive={isDragActive} />\n    </Card>\n  );\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport Predictions from \"./Predictions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InfoSnackbar, LoadingSnackbar } from \"./Snackbars\";\nimport DropImageCard from \"./DropImageCard\";\nimport { fetchImage, makeSession, loadModel, runModel } from \"./util\";\nimport Button from \"@material-ui/core/Button\";\n\nconst session = makeSession();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nexport default function Classifier() {\n  const [loaded, setLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const startLoadModel = async () => {\n    if (isLoading || loaded) {\n      return;\n    }\n    setIsLoading(true);\n    await loadModel(session);\n    setLoaded(true);\n    setIsLoading(false);\n  };\n\n  const [file, setFile] = useState(null);\n  const canvas = useRef(null);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (file) fetchImage(file, canvas, setData);\n  }, [file]);\n\n  const [outputMap, setOutputMap] = useState(null);\n\n  useEffect(() => {\n    if (!loaded || !data) return;\n    runModel(session, data, setOutputMap);\n  }, [loaded, data]); // runs when loaded or data changes\n  const outputData = outputMap && outputMap.values().next().value.data;\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item>\n          <DropImageCard\n            setFile={setFile}\n            canvasRef={canvas}\n            fileLoaded={!!file}\n          />\n          {!loaded && !isLoading && (\n            <Button variant=\"contained\" onClick={startLoadModel}>\n              Load model (48 MB)\n            </Button>\n          )}\n          {!loaded && isLoading && (\n            <LoadingSnackbar message=\"Loading model...\" />\n          )}\n          {loaded && data && !outputMap && (\n            <LoadingSnackbar message=\"Running model...\" />\n          )}\n          {loaded && !file && (\n            <InfoSnackbar message=\"Add or take a picture...\" />\n          )}\n          {!!file && !data && <LoadingSnackbar message=\"Loading image...\" />}\n        </Grid>\n        <Grid item>\n          <Predictions output={outputData} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { getBreedImg } from \"../components/util\";\n\n// breed,source,author,license\nconst csv = `Bouvier_des_Flandres,https://commons.wikimedia.org/wiki/File:Ygor_Raiza.jpg,Eva Nordlund,CC BY-SA 2.5\nBrabancon_griffon,https://en.wikipedia.org/wiki/Griffon_Bruxellois#/media/File:0709_gucci_stolt.jpg,Maria Michaëlsson,CC BY-SA 3.0\nCardigan,https://en.wikipedia.org/wiki/Cardigan_Welsh_Corgi#/media/File:Wystawa_Rybnik_02.10.2011_welsh_corgi_cardigan_g%C5%82owa_pl.jpg,Pleple2000,CC BY-SA 3.0\nDandie_Dinmont,https://commons.wikimedia.org/wiki/File:A_Dandie_Dinmont.jpg,audrey_sel,CC BY-SA 2.0\nEnglish_foxhound,https://commons.wikimedia.org/wiki/English_Foxhound#/media/File:English_Foxhound_portrait.jpg,Thowra_uk,CC BY 2.0\nIrish_water_spaniel,https://commons.wikimedia.org/wiki/File:Irish_Water_Spaniel_4.jpg,Canarian,CC BY-SA 4.0 International\nJapanese_spaniel,https://commons.wikimedia.org/wiki/File:Japanese_ChinJapanese_Spaniel.jpg,T.shinzaemon,CC BY-SA 4.0 International\nKerry_blue_terrier,https://commons.wikimedia.org/wiki/Kerry_Blue_Terrier#/media/File:Kerry_Blue_Terrier_puppy.png,Vbi20,CC BY-SA 3.0\nMexican_Hairless,https://commons.wikimedia.org/wiki/File:Mexican_Hairless.jpg,Dagon Hoyohoy,CC-BY 2.0 Generic\nNorwich_terrier,https://commons.wikimedia.org/wiki/Norwich_Terrier#/media/File:Norwich_Terrier1.JPG,Helene Gisin Hgisin,CC BY-SA 4.0\nOld_English_sheepdog,https://commons.wikimedia.org/wiki/Old_English_Sheepdog#/media/File:Old_English_Sheep_Dog.JPG,Squigman,Public Domain\nscotch_terrier,https://en.wikipedia.org/wiki/Scottish_Terrier#/media/File:Scottish_Terrier_Photo_of_Face.jpg,Elise Carroll,CC BY-SA 4.0\nScottish_deerhound,https://en.wikipedia.org/wiki/Scottish_Deerhound#/media/File:Modhish_Archie_MacTavish-foto_hanna_Wo%C5%BAna-Gil.jpg,Hanna Woźna - Gil,CC BY-SA 3.0\nSealyham_terrier,https://en.wikipedia.org/wiki/Sealyham_Terrier#/media/File:Adult_Sealyham_Terrier.jpg,Chuck in MA,CC BY-SA 4.0\nSussex_spaniel,https://de.wikipedia.org/wiki/Datei:Sussex_spaniel_t43.jpg,Pleple2000,CC BY 3.0\nWalker_hound,https://en.wikipedia.org/wiki/Treeing_Walker_Coonhound#/media/File:Treeing-walker-coonhound-standing.jpg,Kingkong954,Public Domain\nblack-and-tan_coonhound,https://en.wikipedia.org/wiki/Black_and_Tan_Coonhound#/media/File:BTCoonhnd.jpg,Scraig,CC BY-SA 3.0\nclumber,https://en.wikipedia.org/wiki/Clumber_Spaniel#/media/File:Clumber_spaniel_rybnik_kamien_pppl.jpg,Pleple2000,CC BY-SA 4.0\ncollie,https://commons.wikimedia.org/wiki/File:Rough_Collie_600.jpg,sannse,CC BY-SA 3.0 Unported\notterhound,https://en.wikipedia.org/wiki/Otterhound#/media/File:Two_otterhounds.jpg,Machinecha~commonswiki,Public Domain\nredbone,https://commons.wikimedia.org/wiki/File:Memphis_the_Redbone_Coonhound_(7_Nov_2004).jpg,Arlawson,CC BY-SA 3.0 Unported\nschipperke,https://commons.wikimedia.org/wiki/Schipperke#/media/File:G%C5%82owa_gismo_-_schipperke.jpg,Lilly M,CC BY-SA 3.0\nwire-haired_fox_terrier,https://en.wikipedia.org/wiki/Wire_Fox_Terrier#/media/File:Wera.JPG,Duspivova,CC BY-SA 3.0`;\n\nexport default csv.split(\"\\n\").map(line => {\n  const [breed, source, author, license] = line.split(\",\");\n  return {\n    img: getBreedImg(breed),\n    breed,\n    source,\n    author,\n    license\n  };\n});\n","import React from \"react\";\nimport Classifier from \"./Classifier\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport credits from \"../data/credits\";\nimport Button from \"@material-ui/core/Button\";\nimport breeds from \"../data/classes\";\nimport { getBreed } from \"./util\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  content: {\n    marginTop: 20\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  table: {\n    width: \"100%\"\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Dog Breed Classifier\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.content}>\n        <Classifier />\n      </Container>\n      <Container className={classes.content}>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography className={classes.heading}>\n              How do I use this?\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography variant=\"body2\">\n              Tab on the image icon to take a photo of a dog and drag and drop\n              an image file of a dog on the image icon to classify the dog's\n              breed. Note that only {breeds.length} different dog breeds are\n              supported. If your image shows a different dog bread, the\n              prediction will be pretty meaningless.\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography className={classes.heading}>\n              What dog breeds does the classifier know?\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography variant=\"body2\">\n              This classifier is based on the{\" \"}\n              <Link to=\"http://vision.stanford.edu/aditya86/ImageNetDogs/\">\n                Stanford Dogs Dataset\n              </Link>\n              , which contains {breeds.length} different breeds. Here is a list\n              of all of them: {breeds.map(breed => getBreed(breed)).join(\", \")}.\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <Typography className={classes.heading}>\n              What is this good for?\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography variant=\"body2\">\n              This app is not made to actually classify dog breeds. It does not\n              cover enough breeds and important breeds are missing altogether.\n              Rather, it is an end-to-end example that shows how to train\n              machine learning models and run them in the browser. If you want\n              to learn more, check out the{\" \"}\n              <Link to=\"https://github.com/davidpfahler/react-ml-app\">\n                GitHub repository\n              </Link>\n              .\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <Typography className={classes.heading}>\n              What happens to my data?\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography variant=\"body2\">\n              No image that you take with or add to this application will be\n              uploaded or stored on my or anyone's servers by this application /\n              website. In fact, your images never leave your device, because all\n              the calculations are done in you browser! Only some general\n              networking data is processed to make this website work (like all\n              websites). Please see my{\" \"}\n              <Link to=\"https://davidpfahler.com/privacy-policy/\">\n                privacy policy\n              </Link>{\" \"}\n              for further details.\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <Typography className={classes.heading}>Image credits</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Container>\n              <Typography variant=\"body2\">\n                Most images to illustrate the different dog breeds are sourced\n                from pixabay.com, which are free for commercial use and do not\n                require attribution. Some images are sourced from Wikipedia or\n                Wikimedia and are licensed under a variant of the Creative\n                Commons License. The below table contains the required\n                attribution:\n              </Typography>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>Breed</TableCell>\n                    <TableCell>Source Link</TableCell>\n                    <TableCell>Author</TableCell>\n                    <TableCell>License</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {credits.map(row => (\n                    <TableRow key={row.breed}>\n                      <TableCell>\n                        <Avatar alt={`image of ${row.breed}`} src={row.img} />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.breed}\n                      </TableCell>\n                      <TableCell>\n                        <Link to={row.source}>Link to source</Link>\n                      </TableCell>\n                      <TableCell>{row.author}</TableCell>\n                      <TableCell>{row.license}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Container>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <footer className={classes.footer}>\n          <Button\n            className={classes.button}\n            href=\"https://davidpfahler.com/privacy-policy/\"\n          >\n            Privacy Policy\n          </Button>\n          <Button\n            className={classes.button}\n            href=\"https://davidpfahler.com/impressum/\"\n          >\n            Impressum\n          </Button>\n        </footer>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n","import loadImage from \"blueimp-load-image\";\nimport { Tensor, InferenceSession } from \"onnxjs\";\nimport ndarray from \"ndarray\";\nimport ops from \"ndarray-ops\";\nimport resnet from \"../dogs-resnet18.onnx\";\n\nexport const getBreed = className =>\n  className\n    .split(\"_\")\n    .map(p => {\n      return p.charAt(0).toUpperCase() + p.slice(1);\n    })\n    .join(\" \");\n\nexport const getBreedImg = className => {\n  const breed = className\n    .split(\"_\")\n    .map(p => {\n      return p.charAt(0).toLowerCase() + p.slice(1);\n    })\n    .join(\"_\");\n  return `${process.env.PUBLIC_URL}/images/${breed}.jpg`;\n};\n\nexport const makeSession = (() => {\n  let _session = null;\n  return () => {\n    if (_session !== null) {\n      return _session;\n    }\n    return new InferenceSession({ backendHint: \"webgl\" });\n  };\n})();\n\nasync function warmupModel(session) {\n  const dims = [1, 3, 299, 299];\n  const size = dims.reduce((a, b) => a * b);\n  const warmupTensor = new Tensor(new Float32Array(size), \"float32\", dims);\n  for (let i = 0; i < size; i++) {\n    warmupTensor.data[i] = Math.random() * 2.0 - 1.0; // random value [-1.0, 1.0)\n  }\n  await session.run([warmupTensor]);\n}\n\nexport async function loadModel(session) {\n  await session.loadModel(resnet);\n  await warmupModel(session);\n}\n\nasync function _runModel(session, input, setOutputMap) {\n  const { width, height } = input;\n  const data = preprocess(input);\n  const inputTensor = new Tensor(data, \"float32\", [1, 3, width, height]);\n  // await wait(0);\n  const outputMap = await session.run([inputTensor]);\n  setOutputMap(outputMap);\n}\n\nexport function runModel(session, input, setOutputMap) {\n  setTimeout(() => _runModel(session, input, setOutputMap), 10);\n}\n\n// borrowed from onnx.js example: https://github.com/microsoft/onnxjs/blob/4085b7e61804d093e36af6a456d8c14c329f0a0a/examples/browser/resnet50/index.js#L29\nconst preprocess = input => {\n  const { data, width, height } = input;\n\n  // data processing\n  const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\n  const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [\n    1,\n    3,\n    width,\n    height\n  ]);\n  ops.assign(\n    dataProcessedTensor.pick(0, 0, null, null),\n    dataTensor.pick(null, null, 0)\n  );\n  ops.assign(\n    dataProcessedTensor.pick(0, 1, null, null),\n    dataTensor.pick(null, null, 1)\n  );\n  ops.assign(\n    dataProcessedTensor.pick(0, 2, null, null),\n    dataTensor.pick(null, null, 2)\n  );\n  ops.divseq(dataProcessedTensor, 255);\n  ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\n  ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\n  ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\n  ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\n  ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\n  ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\n\n  return dataProcessedTensor.data;\n};\n\nconst wait = ms =>\n  new Promise((res, rej) => {\n    global.setTimeout(() => res(), ms);\n  });\n\nconst imgConfig = {\n  maxWidth: 299,\n  maxHeight: 299,\n  cover: true,\n  crop: true,\n  canvas: true,\n  crossOrigin: \"Anonymous\",\n  orientation: true\n};\n\nconst getImage = url =>\n  new Promise((res, rej) => {\n    loadImage(url, img => res(img), imgConfig);\n  });\n\nexport const fetchImage = async (url, canvas, setData) => {\n  if (!canvas || !canvas.current) return;\n  const img = await getImage(url);\n  if (img.type === \"error\") throw new Error(\"could not load image\");\n  const ctx = canvas.current.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0);\n  await wait(1);\n  const data = ctx.getImageData(\n    0,\n    0,\n    canvas.current.width,\n    canvas.current.height\n  );\n  setData(data);\n};"],"sourceRoot":""}